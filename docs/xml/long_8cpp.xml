<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="long_8cpp" kind="file" language="C++">
    <compoundname>long.cpp</compoundname>
    <includes refid="long_8hpp" local="yes">value/long.hpp</includes>
    <includes local="no">mpfr.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">cstring</includes>
    <includes local="no">ostream</includes>
    <includes local="no">string</includes>
    <includes local="no">memory</includes>
    <includes refid="value_8hpp" local="yes">value/value.hpp</includes>
    <incdepgraph>
      <node id="115">
        <label>value.hpp</label>
        <link refid="value_8hpp_source"/>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>value/long.hpp</label>
        <link refid="long_8hpp_source"/>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>string</label>
      </node>
      <node id="112">
        <label>ostream</label>
      </node>
      <node id="109">
        <label>source/value/long.cpp</label>
        <link refid="long_8cpp"/>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>mpfr.h</label>
      </node>
      <node id="116">
        <label>../equation_base.hpp</label>
        <link refid="equation__base_8hpp_source"/>
        <childnode refid="113" relation="include">
        </childnode>
      </node>
      <node id="117">
        <label>stdio.h</label>
      </node>
      <node id="118">
        <label>cstring</label>
      </node>
      <node id="114">
        <label>memory</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="long_8cpp_1a0d140f4cf0a16e37f32f8938392f6aa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>radix::Long::operator std::shared_ptr&lt; radix::Value &gt;</definition>
        <argsstring>()</argsstring>
        <name>radix::Long::operator std::shared_ptr&lt; radix::Value &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/value/long.cpp" line="235" column="1" bodyfile="source/value/long.cpp" bodystart="235" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="long_8cpp_1afd45580f293c8c86f58ccab867071c17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>radix::Long::operator std::shared_ptr&lt; radix::EquationBase &gt;</definition>
        <argsstring>()</argsstring>
        <name>radix::Long::operator std::shared_ptr&lt; radix::EquationBase &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/value/long.cpp" line="238" column="1" bodyfile="source/value/long.cpp" bodystart="238" bodyend="240"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;value/long.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mpfr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;value/value.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">radix::Long::Long()<sp/>:<sp/>Value(INT)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>SetPrecision(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>mpfr_set_si(value_,<sp/>0.0,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal">radix::Long::Long(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>:<sp/>Value(INT)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>SetPrecision(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>mpfr_set_si(value_,<sp/>val,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal">radix::Long::Long(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>:<sp/>Value(INT)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>SetPrecision(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>mpfr_set_si(value_,<sp/>val,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal">radix::Long::Long(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>:<sp/>Value(INT)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>SetPrecision(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>mpfr_set_si(value_,<sp/>val,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal">radix::Long::Long(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>:<sp/>Value(INT)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>SetPrecision(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>mpfr_set_ui(value_,<sp/>val,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal">radix::Long::Long(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>:<sp/>Value(INT)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>SetPrecision(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>mpfr_set_ui(value_,<sp/>val,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal">radix::Long::Long(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>:<sp/>Value(INT)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>SetPrecision(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>mpfr_set_ui(value_,<sp/>val,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal">radix::Long::Long(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val)<sp/>:<sp/>Value(INT)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>SetPrecision(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>mpfr_set_flt(value_,<sp/>val,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal">radix::Long::Long(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/>:<sp/>Value(INT)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>SetPrecision(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>mpfr_set_d(value_,<sp/>val,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal">radix::Long::Long(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/>:<sp/>Value(INT)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>SetPrecision(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>mpfr_set_ld(value_,<sp/>val,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal">radix::Long::Long(std::string<sp/>val)<sp/>:<sp/>Value(INT)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>SetPrecision(val.size()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char)<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>mpfr_set_str(value_,<sp/>val.c_str(),<sp/>val.size(),<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal">radix::Long::Long(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>val)<sp/>:<sp/>Value(INT)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>SetPrecision(std::strlen(val)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>mpfr_set_str(value_,<sp/>val,<sp/>10,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal">radix::Long::Long(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val,<sp/>std::size_t<sp/>prec)<sp/>:<sp/>Value(INT)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>SetPrecision(prec<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>mpfr_set_si(value_,<sp/>val,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal">radix::Long::Long(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val,<sp/>std::size_t<sp/>prec)<sp/>:<sp/>Value(INT)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>SetPrecision(prec<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>mpfr_set_si(value_,<sp/>val,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">radix::Long::Long(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val,<sp/>std::size_t<sp/>prec)<sp/>:<sp/>Value(INT)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>SetPrecision(prec<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>mpfr_set_si(value_,<sp/>val,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal">radix::Long::Long(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val,<sp/>std::size_t<sp/>prec)<sp/>:<sp/>Value(INT)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>SetPrecision(prec<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>mpfr_set_ui(value_,<sp/>val,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal">radix::Long::Long(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val,<sp/>std::size_t<sp/>prec)<sp/>:<sp/>Value(INT)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>SetPrecision(prec<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>mpfr_set_ui(value_,<sp/>val,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal">radix::Long::Long(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val,<sp/>std::size_t<sp/>prec)<sp/>:<sp/>Value(INT)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>SetPrecision(prec<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>mpfr_set_ui(value_,<sp/>val,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal">radix::Long::Long(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val,<sp/>std::size_t<sp/>prec)<sp/>:<sp/>Value(INT)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>SetPrecision(prec<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>mpfr_set_flt(value_,<sp/>val,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal">radix::Long::Long(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val,<sp/>std::size_t<sp/>prec)<sp/>:<sp/>Value(INT)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>SetPrecision(prec<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>mpfr_set_d(value_,<sp/>val,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal">radix::Long::Long(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val,<sp/>std::size_t<sp/>prec)<sp/>:<sp/>Value(INT)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>SetPrecision(prec<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>mpfr_set_ld(value_,<sp/>val,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal">radix::Long::Long(std::string<sp/>val,<sp/>std::size_t<sp/>prec)<sp/>:<sp/>Value(INT)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>SetPrecision(prec<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>mpfr_set_str(value_,<sp/>val.c_str(),<sp/>val.size(),<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal">radix::Long::Long(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>val,<sp/>std::size_t<sp/>prec)<sp/>:<sp/>Value(INT)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>SetPrecision(prec<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>mpfr_set_str(value_,<sp/>val,<sp/>10,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">radix::Long::Long(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>copy)<sp/>:<sp/>Value(INT)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>mpfr_init2(value_,<sp/>mpfr_get_prec(copy.value_));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>mpfr_set(value_,<sp/>copy.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">radix::Long::~Long()<sp/>{<sp/>mpfr_clear(value_);<sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>radix::Long::Set(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>{<sp/>mpfr_set_si(value_,<sp/>val,<sp/>MPFR_RNDD);<sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>radix::Long::Set(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>{<sp/>mpfr_set_si(value_,<sp/>val,<sp/>MPFR_RNDD);<sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>radix::Long::Set(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>mpfr_set_si(value_,<sp/>val,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>radix::Long::Set(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>{<sp/>mpfr_set_ui(value_,<sp/>val,<sp/>MPFR_RNDD);<sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>radix::Long::Set(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>mpfr_set_ui(value_,<sp/>val,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>radix::Long::Set(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>mpfr_set_ui(value_,<sp/>val,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>radix::Long::Set(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val)<sp/>{<sp/>mpfr_set_flt(value_,<sp/>val,<sp/>MPFR_RNDD);<sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>radix::Long::Set(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/>{<sp/>mpfr_set_d(value_,<sp/>val,<sp/>MPFR_RNDD);<sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>radix::Long::Set(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/>{<sp/>mpfr_set_ld(value_,<sp/>val,<sp/>MPFR_RNDD);<sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>radix::Long::Set(std::string<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>mpfr_set_str(value_,<sp/>val.c_str(),<sp/>val.size(),<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>radix::Long::Set(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>mpfr_set_str(value_,<sp/>val,<sp/>std::strlen(val),<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>radix::Long::Set(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>copy)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>mpfr_init2(value_,<sp/>mpfr_get_prec(copy.value_));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>mpfr_set(value_,<sp/>copy.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>radix::Long::Data(mpfr_t&amp;<sp/>val)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/>mpfr_set(val,<sp/>value_,<sp/>MPFR_RNDD);<sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">std::size_t<sp/>radix::Long::GetPrecision()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mpfr_get_prec(value_);<sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>radix::Long::SetPrecision(std::size_t<sp/>bits)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>mpfr_init2(value_,<sp/>bits<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal">std::string<sp/>radix::Long::GetString(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prec,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>left)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>std::string<sp/>fmt<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;%.&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(prec)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Rg&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prec<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>fmt<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;%RYg&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>mpfr_snprintf(NULL,<sp/>0,<sp/>fmt.c_str(),<sp/>value_);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buffer<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(malloc(len));</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>mpfr_snprintf(buffer,<sp/>len<sp/>+<sp/>1,<sp/>fmt.c_str(),<sp/>value_);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>std::string<sp/>str(buffer,<sp/>len);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prec<sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>str.size()<sp/>&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(prec))<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(str<sp/>+<sp/>std::string(prec<sp/>-<sp/>str.size()<sp/>+<sp/>1,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(std::string(prec<sp/>-<sp/>str.size()<sp/>+<sp/>1,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>+<sp/>str);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal">std::string<sp/>radix::Long::Latex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetString();</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref>&amp;<sp/>radix::Long::operator=(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>Set(val);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref>&amp;<sp/>radix::Long::operator=(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>Set(val);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref>&amp;<sp/>radix::Long::operator=(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>Set(val);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref>&amp;<sp/>radix::Long::operator=(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>Set(val);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref>&amp;<sp/>radix::Long::operator=(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>Set(val);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref>&amp;<sp/>radix::Long::operator=(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>Set(val);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref>&amp;<sp/>radix::Long::operator=(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>Set(val);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref>&amp;<sp/>radix::Long::operator=(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>Set(val);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref>&amp;<sp/>radix::Long::operator=(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>Set(val);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref>&amp;<sp/>radix::Long::operator=(std::string<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>Set(val);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref>&amp;<sp/>radix::Long::operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>Set(val);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref>&amp;<sp/>radix::Long::operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>Set(val);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref>&amp;<sp/>radix::Long::operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>mpfr_add(value_,<sp/>value_,<sp/>rhs.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref>&amp;<sp/>radix::Long::operator-=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>mpfr_sub(value_,<sp/>value_,<sp/>rhs.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref>&amp;<sp/>radix::Long::operator*=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>mpfr_mul(value_,<sp/>value_,<sp/>rhs.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref>&amp;<sp/>radix::Long::operator/=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>mpfr_div(value_,<sp/>value_,<sp/>rhs.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal">radix::Long::operator<sp/>std::shared_ptr&lt;radix::Value&gt;(){</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::dynamic_pointer_cast&lt;<ref refid="classradix_1_1Value" kindref="compound">radix::Value</ref>&gt;(std::make_shared&lt;Long&gt;(*this));</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal">radix::Long::operator<sp/>std::shared_ptr&lt;radix::EquationBase&gt;(){</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::dynamic_pointer_cast&lt;<ref refid="classradix_1_1EquationBase" kindref="compound">radix::EquationBase</ref>&gt;(std::make_shared&lt;Long&gt;(*this));</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal">std::ostream&amp;<sp/>radix::operator&lt;&lt;(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>lhs)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>out<sp/>&lt;&lt;<sp/>lhs.GetString();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>radix::operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mpfr_equal_p(lhs.value_,<sp/>rhs.value_);</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>radix::operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(lhs<sp/>==<sp/>rhs);</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>radix::operator&lt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mpfr_less_p(lhs.value_,<sp/>rhs.value_);</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>radix::operator&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>rhs)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rhs<sp/>&lt;<sp/>lhs;<sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>radix::operator&lt;=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(rhs<sp/>&lt;<sp/>rhs);</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>radix::operator&gt;=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(lhs<sp/>&lt;<sp/>rhs);</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>res.SetPrecision(std::min(lhs.GetPrecision(),<sp/>rhs.GetPrecision()));</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>mpfr_add(res.value_,<sp/>lhs.value_,<sp/>rhs.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>res.SetPrecision(std::min(lhs.GetPrecision(),<sp/>rhs.GetPrecision()));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>mpfr_sub(res.value_,<sp/>lhs.value_,<sp/>rhs.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>res.SetPrecision(std::min(lhs.GetPrecision(),<sp/>rhs.GetPrecision()));</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>mpfr_mul(res.value_,<sp/>lhs.value_,<sp/>rhs.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>res.SetPrecision(std::min(lhs.GetPrecision(),<sp/>rhs.GetPrecision()));</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>mpfr_div(res.value_,<sp/>lhs.value_,<sp/>rhs.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::abs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>mpfr_abs(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::fabs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>mpfr_abs(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::max(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>res.SetPrecision(std::max(x.GetPrecision(),<sp/>y.GetPrecision()));</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>mpfr_max(res.value_,<sp/>x.value_,<sp/>y.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::min(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>res.SetPrecision(std::min(x.GetPrecision(),<sp/>y.GetPrecision()));</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>mpfr_min(res.value_,<sp/>x.value_,<sp/>y.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::exp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>mpfr_exp(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::exp2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>mpfr_exp2(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::exp10(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>mpfr_exp10(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::expm1(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>mpfr_expm1(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::log(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>mpfr_log(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::log2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>mpfr_log2(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::log10(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>mpfr_log10(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::log1p(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>mpfr_log1p(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::pow(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>base,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>exp)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>res.SetPrecision(base.GetPrecision());</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>mpfr_pow(res.value_,<sp/>base.value_,<sp/>exp.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::sqrt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>mpfr_sqrt(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::cbrt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>mpfr_cbrt(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::rootn(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>mpfr_root(res.value_,<sp/>arg.value_,<sp/>k,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::hypot(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>res.SetPrecision(std::max(x.GetPrecision(),<sp/>y.GetPrecision()));</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>mpfr_hypot(res.value_,<sp/>x.value_,<sp/>y.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::sin(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>mpfr_sin(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::cos(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>mpfr_cos(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::tan(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>mpfr_tan(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::sec(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>mpfr_sec(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::csc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>mpfr_csc(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::cot(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>mpfr_cot(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::acos(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>mpfr_acos(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::asin(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>mpfr_asin(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::atan(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>mpfr_atan(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::atan2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>res.SetPrecision(std::max(y.GetPrecision(),<sp/>x.GetPrecision()));</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>mpfr_atan2(res.value_,<sp/>y.value_,<sp/>x.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::sinh(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>mpfr_sinh(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::cosh(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>mpfr_cosh(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::tanh(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>mpfr_tanh(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::sech(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>mpfr_sech(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::csch(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>mpfr_csch(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::coth(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>mpfr_coth(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::acosh(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>mpfr_acosh(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::asinh(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>mpfr_asinh(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="508"><highlight class="normal">}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::atanh(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>mpfr_atanh(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::erf(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>mpfr_erf(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::erfc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>mpfr_erfc(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::tgamma(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>mpfr_gamma(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::lgamma(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>mpfr_lngamma(res.value_,<sp/>arg.value_,<sp/>MPFR_RNDD);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::ceil(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>mpfr_ceil(res.value_,<sp/>arg.value_);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::floor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>mpfr_floor(res.value_,<sp/>arg.value_);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::trunc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>mpfr_trunc(res.value_,<sp/>arg.value_);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::round(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>mpfr_round(res.value_,<sp/>arg.value_);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><ref refid="classradix_1_1Long" kindref="compound">radix::Long</ref><sp/>radix::rint(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long&amp;<sp/>arg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RoundingMode&amp;<sp/>rnd)<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>Long<sp/>res;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>res.SetPrecision(arg.GetPrecision());</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>mpfr_rint(res.value_,<sp/>arg.value_,<sp/>static_cast&lt;mpfr_rnd_t&gt;(rnd));</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="570"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="source/value/long.cpp"/>
  </compounddef>
</doxygen>
