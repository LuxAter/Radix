<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classradix_1_1Variable" kind="class" language="C++" prot="public">
    <compoundname>radix::Variable</compoundname>
    <basecompoundref refid="classradix_1_1Value" prot="public" virt="non-virtual">radix::Value</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classradix_1_1Variable_1a574748a71992ceeb6cb814fa1e56c9a7" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string radix::Variable::ref_</definition>
        <argsstring></argsstring>
        <name>ref_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/value/variable.hpp" line="33" column="1" bodyfile="include/value/variable.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classradix_1_1Variable_1afdea23f6e80bda446475dda7fdb11ebd" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classradix_1_1Value" kindref="compound">Value</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Value&gt; radix::Variable::val_</definition>
        <argsstring></argsstring>
        <name>val_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/value/variable.hpp" line="34" column="1" bodyfile="include/value/variable.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classradix_1_1Variable_1a287f174bc7d058cae8cf5eccb0d80942" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>radix::Variable::Variable</definition>
        <argsstring>()</argsstring>
        <name>Variable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/value/variable.hpp" line="13" column="1" bodyfile="source/value/variable.cpp" bodystart="10" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="classradix_1_1Variable_1afda152d664203a2e660dcec4e7f4f6ee" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>radix::Variable::Variable</definition>
        <argsstring>(const std::string &amp;ref_str)</argsstring>
        <name>Variable</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>ref_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/value/variable.hpp" line="14" column="1" bodyfile="source/value/variable.cpp" bodystart="11" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="classradix_1_1Variable_1ad74660a33f619558be499c0c87d71e73" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>radix::Variable::Variable</definition>
        <argsstring>(const char &amp;ref_ch)</argsstring>
        <name>Variable</name>
        <param>
          <type>const char &amp;</type>
          <declname>ref_ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/value/variable.hpp" line="15" column="1" bodyfile="source/value/variable.cpp" bodystart="13" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="classradix_1_1Variable_1a9142d348d651f1d0f009a3a509aaf5cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>radix::Variable::~Variable</definition>
        <argsstring>()</argsstring>
        <name>~Variable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/value/variable.hpp" line="16" column="1" bodyfile="source/value/variable.cpp" bodystart="15" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classradix_1_1Variable_1aac2a333d710dae5a8a1499019e6b0541" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void radix::Variable::SetRef</definition>
        <argsstring>(const std::string &amp;ref_str)</argsstring>
        <name>SetRef</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>ref_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/value/variable.hpp" line="18" column="1" bodyfile="source/value/variable.cpp" bodystart="17" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classradix_1_1Variable_1aa56b21d16749be50b78eea83b77d1700" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void radix::Variable::SetRef</definition>
        <argsstring>(const char &amp;ref_ch)</argsstring>
        <name>SetRef</name>
        <param>
          <type>const char &amp;</type>
          <declname>ref_ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/value/variable.hpp" line="19" column="1" bodyfile="source/value/variable.cpp" bodystart="18" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classradix_1_1Variable_1a072e338af8cc3833a18a8648de46c7c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void radix::Variable::SetVal</definition>
        <argsstring>(std::shared_ptr&lt; Value &gt; val)</argsstring>
        <name>SetVal</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classradix_1_1Value" kindref="compound">Value</ref> &gt;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/value/variable.hpp" line="20" column="1" bodyfile="source/value/variable.cpp" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classradix_1_1Variable_1a66ba56c31e8d4bc795f83e13c236c5ba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string radix::Variable::GetRef</definition>
        <argsstring>() const</argsstring>
        <name>GetRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/value/variable.hpp" line="22" column="1" bodyfile="source/value/variable.cpp" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classradix_1_1Variable_1a2f282cab8f47b1fac30df8f7df3f8acd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classradix_1_1Value" kindref="compound">Value</ref> &gt;</type>
        <definition>std::shared_ptr&lt; radix::Value &gt; radix::Variable::GetVal</definition>
        <argsstring>() const</argsstring>
        <name>GetVal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/value/variable.hpp" line="23" column="1" bodyfile="source/value/variable.cpp" bodystart="22" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classradix_1_1Variable_1a336d28b81443a656d72c713f4fa73c63" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string radix::Variable::Latex</definition>
        <argsstring>() const</argsstring>
        <name>Latex</name>
        <reimplements refid="classradix_1_1Value_1a2eac6c73b8e2a8131407bca685b05299">Latex</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/value/variable.hpp" line="25" column="1" bodyfile="source/value/variable.cpp" bodystart="24" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classradix_1_1Variable_1a46f38d8ae307f2e7846b76f15b727201" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classradix_1_1Variable" kindref="compound">Variable</ref> &amp;</type>
        <definition>radix::Variable &amp; radix::Variable::operator=</definition>
        <argsstring>(const std::shared_ptr&lt; Value &gt; val)</argsstring>
        <name>operator=</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classradix_1_1Value" kindref="compound">Value</ref> &gt;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/value/variable.hpp" line="27" column="1" bodyfile="source/value/variable.cpp" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classradix_1_1Variable_1aa13e5f5df26da89d3b8984061ca38bd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>radix::Variable::operator std::shared_ptr&lt; Value &gt;</definition>
        <argsstring>()</argsstring>
        <name>operator std::shared_ptr&lt; Value &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/value/variable.hpp" line="29" column="1" bodyfile="source/value/variable.cpp" bodystart="38" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classradix_1_1Variable_1afcb88f325eaf93a53c6c55186e823925" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>radix::Variable::operator std::shared_ptr&lt; EquationBase &gt;</definition>
        <argsstring>()</argsstring>
        <name>operator std::shared_ptr&lt; EquationBase &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/value/variable.hpp" line="30" column="1" bodyfile="source/value/variable.cpp" bodystart="42" bodyend="45"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="29">
        <label>radix::EquationBase</label>
        <link refid="classradix_1_1EquationBase"/>
      </node>
      <node id="28">
        <label>radix::Value</label>
        <link refid="classradix_1_1Value"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>radix::Variable</label>
        <link refid="classradix_1_1Variable"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="32">
        <label>radix::EquationBase</label>
        <link refid="classradix_1_1EquationBase"/>
      </node>
      <node id="31">
        <label>radix::Value</label>
        <link refid="classradix_1_1Value"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="30">
        <label>radix::Variable</label>
        <link refid="classradix_1_1Variable"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/value/variable.hpp" line="11" column="1" bodyfile="include/value/variable.hpp" bodystart="11" bodyend="35"/>
    <listofallmembers>
      <member refid="classradix_1_1EquationBase_1aed778dfc42254a031eb3755aeed6eef5" prot="public" virt="non-virtual"><scope>radix::Variable</scope><name>EquationBase</name></member>
      <member refid="classradix_1_1EquationBase_1a88482ba80ce76c683abae39cab450b1b" prot="public" virt="non-virtual"><scope>radix::Variable</scope><name>EquationBase</name></member>
      <member refid="classradix_1_1Variable_1a66ba56c31e8d4bc795f83e13c236c5ba" prot="public" virt="non-virtual"><scope>radix::Variable</scope><name>GetRef</name></member>
      <member refid="classradix_1_1Variable_1a2f282cab8f47b1fac30df8f7df3f8acd" prot="public" virt="non-virtual"><scope>radix::Variable</scope><name>GetVal</name></member>
      <member refid="classradix_1_1Variable_1a336d28b81443a656d72c713f4fa73c63" prot="public" virt="virtual"><scope>radix::Variable</scope><name>Latex</name></member>
      <member refid="classradix_1_1Variable_1afcb88f325eaf93a53c6c55186e823925" prot="public" virt="non-virtual"><scope>radix::Variable</scope><name>operator std::shared_ptr&lt; EquationBase &gt;</name></member>
      <member refid="classradix_1_1Variable_1aa13e5f5df26da89d3b8984061ca38bd8" prot="public" virt="non-virtual"><scope>radix::Variable</scope><name>operator std::shared_ptr&lt; Value &gt;</name></member>
      <member refid="classradix_1_1Variable_1a46f38d8ae307f2e7846b76f15b727201" prot="public" virt="non-virtual"><scope>radix::Variable</scope><name>operator=</name></member>
      <member refid="classradix_1_1Variable_1a574748a71992ceeb6cb814fa1e56c9a7" prot="private" virt="non-virtual"><scope>radix::Variable</scope><name>ref_</name></member>
      <member refid="classradix_1_1Variable_1aac2a333d710dae5a8a1499019e6b0541" prot="public" virt="non-virtual"><scope>radix::Variable</scope><name>SetRef</name></member>
      <member refid="classradix_1_1Variable_1aa56b21d16749be50b78eea83b77d1700" prot="public" virt="non-virtual"><scope>radix::Variable</scope><name>SetRef</name></member>
      <member refid="classradix_1_1Variable_1a072e338af8cc3833a18a8648de46c7c7" prot="public" virt="non-virtual"><scope>radix::Variable</scope><name>SetVal</name></member>
      <member refid="classradix_1_1Value_1a5f6d52b7c39af605d22e7af2b777e045" prot="public" virt="non-virtual"><scope>radix::Variable</scope><name>type_</name></member>
      <member refid="classradix_1_1Variable_1afdea23f6e80bda446475dda7fdb11ebd" prot="private" virt="non-virtual"><scope>radix::Variable</scope><name>val_</name></member>
      <member refid="classradix_1_1Value_1ae7d39145f20602136337456577e288d5" prot="public" virt="non-virtual"><scope>radix::Variable</scope><name>Value</name></member>
      <member refid="classradix_1_1Value_1abe99ba991c4009aca8ab9a775d461a11" prot="public" virt="non-virtual"><scope>radix::Variable</scope><name>Value</name></member>
      <member refid="classradix_1_1Variable_1a287f174bc7d058cae8cf5eccb0d80942" prot="public" virt="non-virtual"><scope>radix::Variable</scope><name>Variable</name></member>
      <member refid="classradix_1_1Variable_1afda152d664203a2e660dcec4e7f4f6ee" prot="public" virt="non-virtual"><scope>radix::Variable</scope><name>Variable</name></member>
      <member refid="classradix_1_1Variable_1ad74660a33f619558be499c0c87d71e73" prot="public" virt="non-virtual"><scope>radix::Variable</scope><name>Variable</name></member>
      <member refid="classradix_1_1EquationBase_1aaa9f5c07be6d0af8410cec997384c7e5" prot="public" virt="virtual"><scope>radix::Variable</scope><name>~EquationBase</name></member>
      <member refid="classradix_1_1Value_1ae0bfaf899fac8a009c03a651760245d1" prot="public" virt="virtual"><scope>radix::Variable</scope><name>~Value</name></member>
      <member refid="classradix_1_1Variable_1a9142d348d651f1d0f009a3a509aaf5cc" prot="public" virt="virtual"><scope>radix::Variable</scope><name>~Variable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
